package com.guigu.ssm.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.ObjectError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.guigu.ssm.po.ItemsCustom;
import com.guigu.ssm.po.ItemsQueryVO;
import com.guigu.ssm.service.ItemsService;
import com.guigu.ssm.validation.ValidGroupAdd;
import com.guigu.ssm.validation.ValidGroupUpdate;

/**       
 * <p>project_name:SpringMVCSpringMyBatis</p>
 * <p>package_name:com.guigu.ssm.controller.ItemsController</p>
 * <p>description：</p>
 * <p>@author：刘老师<p>   
 * <p> date:2018年1月18日下午2:26:04 </p>
 * <p>comments：    </p>
 * <p>@version  jdk1.8</p>
 * 
 * <p>Copyright (c) 2018, 980991634@qq.com All Rights Reserved. </p>    
 */
@Controller
@RequestMapping("/items")
public class ItemsController {

    @Autowired
    @Qualifier("itemsService")
    private ItemsService itemsService;
    
    //商品信息修改页面
//    @RequestMapping("/editItems")
//    @RequestMapping(value="/editItems",method= {RequestMethod.POST,RequestMethod.GET})
//    public ModelAndView eidtItems() throws Exception{
//        //先使用固定的的数据
//        ItemsCustom itemsCustom =itemsService.findItemsById(1);
//        
//        ModelAndView modelAndView =new ModelAndView();
//        //填充数据
//        modelAndView.addObject("items", itemsCustom);
//        //设置视图
//        modelAndView.setViewName("items/editItems");
//        
//        return modelAndView;
//    }
    
    @RequestMapping(value="/editItems",method= {RequestMethod.POST,RequestMethod.GET})
    public String eidtItems(Model model,@RequestParam(value="id",required=true)Integer items_id) throws Exception{
        ItemsCustom itemsCustom =itemsService.findItemsById(items_id);
        
        model.addAttribute("items", itemsCustom);
        System.out.println("-----使用返回值为String....使用形参Model");
        //跳转视图=""
        return "items/editItems";
    }
    
    
    
    @RequestMapping("/editItemsSubmit")
    public String editItemsSubmit(Model model,Integer id,@Validated(value= {ValidGroupUpdate.class}) ItemsCustom itemsCustom,BindingResult bindingResult) throws Exception{
        //获取校验错误信息
        if(bindingResult.hasErrors()) {
            //输出错误信息
            List<ObjectError> allErrors=bindingResult.getAllErrors();
            //将错误信息传递到页面
            model.addAttribute("allErrors", allErrors);
            //转发到商品修改页面
            return "items/editItems";
        }
        
        
        itemsService.updateItems(id, itemsCustom);
        
        //重定向到商品列表页面、
//        return "redirect:queryItems.action";
        
        //页面转发
        return "forward:queryItems.action";
        
        //转发到jsp页面
//        return "success";
    }
    
    
    
    //商品的查询
    @RequestMapping("/queryItems.action")
    public ModelAndView queryItems(HttpServletRequest request,ItemsQueryVO itemsQueryVO) throws Exception{
        
        //测试请求转发  和重定向后是否共享request
        System.out.println(request.getParameter("id"));
        
        List<ItemsCustom> itemsList =itemsService.findItemsList(itemsQueryVO);
        //返回ModelAndView
        ModelAndView modelAndView =new ModelAndView();
        modelAndView.addObject("itemsList",itemsList);
        modelAndView.setViewName("items/itemsList");
        return modelAndView;
        
    }
    
    //批量删除
    @RequestMapping("/deleteItems")
    public String deleteItems( Integer [] items_id) throws Exception{
        itemsService.deleteItems(items_id);
        
        return "forward:queryItems.action";
        
    }
    
    
    //添加
    @RequestMapping("/addItems")
    public String  addItems(@Validated(value= {ValidGroupAdd.class}) ItemsCustom itemsCustom,BindingResult bindingResult) throws Exception{
        return "forward:queryItems.action";
    }
    
    
    
    
}


